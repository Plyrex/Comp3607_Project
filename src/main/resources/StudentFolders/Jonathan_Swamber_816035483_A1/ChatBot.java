/**
 * ID:816035483
 * This Class represents a chatbot with a name and a count of how much 
 * messages it generated. t includes methods for generating responses, 
 * checking to see if the message limit is reached, and getting statistics
 * about the usage of the chatbots.
 */
public class ChatBot{
    private String chatBotName;
    private int numResponsesGenerated;
    private static int messageLimit = 10;
    private static int messageNumber = 0;
    
    // Private Constructor
    private ChatBot() {
        this.chatBotName = ChatBotGenerator.generateChatBotLLM(6);
    }
    
    // Constructor that takes the LLMcode and generate a ChatBot
    public ChatBot(int LLMCode){
        this.chatBotName = ChatBotGenerator.generateChatBotLLM(LLMCode);
    }
    
    // Getter for chatbot name
    public String getChatBotName(){
        return this.chatBotName;
    }
    
    // Getter for the number of responses generated by the chatbot
    public int getNumResponsesGenerated(){
        return numResponsesGenerated;
    }
    
    // Static method for getting the total amount of responses generated by all chatbots
    public static int getTotalNumResponsesGenerated(){
        return messageNumber;
    }
    
    // Static method for getting the total amount of remaining messages
    public static int getTotalNumMessagesRemaining(){
        int messagesRemaining = messageLimit - messageNumber;
        return messagesRemaining;
    }
    
    // Static method to see if the limit on the amount of messages has been met
    public static boolean limitReached(){
        if (messageNumber >= messageLimit){
            return true;
        } else {
            return false;
        }
    }
    
    // Private method to generate a response
    private String generateResponse(){
        messageNumber = messageNumber + 1;
        numResponsesGenerated = numResponsesGenerated + 1;
        String response = "(Message# " + messageNumber +
        ") Response from " + chatBotName + " >> generatedTextHere";
        return response;
    }
    
    // Method to promt the chatbot for a response
    public String prompt(String requestMessage){
        if(!limitReached()){
            return generateResponse();
        } else {
            return "Daily Limit Reached. Wait 24 hours to resume chatbot usage";
        }
    }
    
    // Method to return a string representation of the ChatBot
    public String toString() {
        return "ChatBot Name: " + this.chatBotName + 
        " Number Messages Used: " + this.numResponsesGenerated;
    }
}
/**
 * Sources used:
 * 1) Objects and Classes, Abstraction and Encapsulation Week 2 Lecture 1 notes by Dr. Phaedra Mohammed
 */